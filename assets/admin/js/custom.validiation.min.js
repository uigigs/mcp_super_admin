var CustomFormValidiation = function() {
    "use strict";
    return {
        init: function() {
            var e, r, i, n, t, o;
            $.validator.setDefaults({
                errorElement: "span",
                errorClass: "help-block",
                errorPlacement: function(e, r) {
                if(r.attr("type") == 'text'){
                     "radio" == r.attr("type") || "checkbox" == r.attr("type") ? e.insertAfter($(r).closest(".form-group").children("div").children().last()) : "card_expiry_mm" == r.attr("name") || "card_expiry_yyyy" == r.attr("name") ? e.appendTo($(r).closest(".form-group").children("div")) : e.insertAfter(r)
                 } else if(r.attr("type") == 'password'){
                     e.insertAfter(r);
                 } else {
                   e.appendTo(r.closest('.ermsg')); 
                 }
                },
                ignore: ":hidden",
                success: function(e, r) {
                    e.addClass("help-block valid"), $(r).closest(".form-group").removeClass("has-error")
                },
                highlight: function(e) {
                    $(e).closest(".help-block").removeClass("valid"), $(e).closest(".form-group").addClass("has-error")
                },
                unhighlight: function(e) {
                    $(e).closest(".form-group").removeClass("has-error")
                }
            }), e = $(".form-validiation"), r = $(".errorHandler", e), e.validate({
                rules: {
                    name: {
                        maxlength: 100,
                    },
                    username: {
                        minlength: 2,
                        required: !0
                    },
                    email: {
                        email:true,
                        required: true,
                        maxlength: 40
                    },
                    password: {
                        minlength: 6,
                    },
                    old_password: {
                        required: !0
                    },
                    password_confirmation: {
                      equalTo: "#password",
                    },
                    "confirm-password": {
                      equalTo: "#password",
                    },
                    contact_number: {
                      required: !0,
                      number: true,
                      minlength: 10,
                      maxlength: 10
                    },
                     price: {
                        required: !0,
                        number: true
                    },
                    qty: {
                        required: !0,
                        number: true
                    },
                    'blog_categories_id': {
                       required: "#blog_categories_id:checked",
                       minlength: 1
                     },
                    postcode: {
                        number: true,
                        maxlength: 9
                    },
                },
                messages: {
                    email: {
                        required: "Email is required.",
                        email: "Please enter valid email.",
                    },
                    password: {
                        required: "Password is required.",
                        minlength: "Enter at least {0} characters password",
                    },
                    old_password: {
                        required: "Old password is required.",
                    },
                    password_confirmation: {
                        required: "Confirm password is required.",
                         equalTo: "Your password not match.",
                    },
                    qty: {
                         number: "Enter only numeric value.",
                    },
                },
                submitHandler: function(e) {
                    r.hide(), e.submit()
                },
                invalidHandler: function(e, i) {
                    r.show()
                }
            }), i = $(".form-forgot"), n = $(".errorHandler", i), i.validate({
                rules: {
                    email: {
                        required: !0
                    }
                },
                submitHandler: function(e) {
                    n.hide(), i.submit()
                },
                invalidHandler: function(e, r) {
                    n.show()
                }
            }), t = $(".form-register"), o = $(".errorHandler", t), t.validate({
                rules: {
                    full_name: {
                        minlength: 2,
                        required: !0
                    },
                    address: {
                        minlength: 2,
                        required: !0
                    },
                    city: {
                        minlength: 2,
                        required: !0
                    },
                    gender: {
                        required: !0
                    },
                    email: {
                        required: !0
                    },
                    password: {
                        minlength: 6,
                        required: !0
                    },
                    password_again: {
                        required: !0,
                        minlength: 5,
                        equalTo: "#password"
                    },
                    agree: {
                        minlength: 1,
                        required: !0
                    }
                },
                submitHandler: function(e) {
                    o.hide(), t.submit()
                },
                invalidHandler: function(e, r) {
                    o.show()
                }
            })
        }
    }
}();

  

function upperMe(id) {
    document.getElementById(id).value = document.getElementById(id).value.toUpperCase().trim();
}

jQuery.validator.addMethod("alphanumeric", function(value, element) {
    return this.optional(element) || /^\w+$/i.test(value);
}, "Letters, numbers, and underscores only please");

jQuery.validator.addMethod("lettersonly", function(value, element) {
    return this.optional(element) || /^[a-z," "]+$/i.test(value);
}, "Letters and spaces only please"); 

function validateNumber(event) {
        var key = window.event ? event.keyCode : event.which;
        if (event.keyCode === 8 || event.keyCode === 46) {
            return true;
        } else if ( key < 48 || key > 57 ) {
            return false;
        } else {
            return true;
        }
};

$('.number_float').keypress(function(eve) {
  if ((eve.which != 46 || $(this).val().indexOf('.') != -1) && (eve.which < 48 || eve.which > 57) || (eve.which == 46 && $(this).caret().start == 0) ) {
    if(eve.keyCode === 8){
      return true;
    }else{
      return false;
    }
  }
  // this part is when left part of number is deleted and leaves a . in the leftmost position. For example, 33.25, then 33 is deleted
  $('.number_float').keyup(function(eve) {
    if ($(this).val().indexOf('.') == 0) {
      $(this).val($(this).val().substring(1));
    }
  });
});


   
function getMetaContentByName(name,content){
   var content = (content==null)?'content':content;
   return document.querySelector("meta[name='"+name+"']").getAttribute(content);
}

jQuery(document).ready(function () {
    $('.onlynumber').keypress(validateNumber);
    
    $('input[name="filesss"]').change(function (event) { 
      var MediaId = this.id;
      var ___url_ = $(this).data("actionurl");
      var uploadtype = $(this).data("uploadtype"); //i.e [image,video,pdf,docx]
      var inter;
        Lobibox.progress({
            title: 'Please wait',
            label: 'Uploading files...',
            progressTpl: '<div class="progress " >\n\
            <div class="progress-bar progress-bar-danger progress-bar-striped lobibox-progress-element myprogress" role="progressbar" style="width:0%">0%</div>\n\
            </div>',
            progressCompleted: function () {
              
            },
            onShow: function ($this) {
                var xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = evt.loaded / evt.total;
                            percentComplete = parseInt(percentComplete * 100);
                            $('.myprogress').text(percentComplete + '%');
                            $('.myprogress').css('width', percentComplete + '%');
                            var i = 0;
                        }
                    }, false);
                    return xhr;
            },
            closed: function () {
                //
            }
        });
         event.preventDefault();
         var data = new FormData();
         var files = $("#"+MediaId).get(0).files;
         data.append("_token", getMetaContentByName('csrf-token'));
        if (files.length > 0) { data.append("files", files[0]); }
            else {
                $(function () {
                        (function () {
                            Lobibox.notify('info', {
                                rounded: false,
                                position: "top right",
                                delay: 5000,
                                delayIndicator: true,
                                msg: "Please select file to upload."
                            });
                        })();
                    });
                return false;
            }
            var extension = $("#"+MediaId).val().split('.').pop().toUpperCase();
            if (extension != "PNG" && extension != "JPG" && extension != "GIF" && extension != "JPEG") {
                 $(function () {
                        (function () {
                            Lobibox.notify('error', {
                                rounded: false,
                                position: "top right",
                                delay: 5000,
                                delayIndicator: true,
                                msg: "Invalid file format."
                            });
                        })();
                    });
                  $("#"+MediaId).val('');
                return false;
            }
        $.ajax({
            type: "post",
            enctype: 'multipart/form-data',
            url: ___url_,
            data: data,
            processData: false,
            contentType: false,
            cache: false,
            timeout: 600000,
            beforeSend: function (){
                   
            },
            success: function (data) { 
              
            },
            error: function (e) {  
               
            }
        });
    });

     $('.fileupload').delegate('input[name="files"]','change',function (event) { 
      var MediaId = this.id; 
      var ___url_ = $(this).data("actionurl");
      //var uploadtype = $(this).data("uploadtype"); //i.e [image,video,pdf,docx]
      var inter;
        Lobibox.progress({
            title: 'Please wait',
            label: 'Uploading files...',
            progressTpl: '<div class="progress " >\n\
            <div class="progress-bar progress-bar-danger progress-bar-striped lobibox-progress-element myprogress" role="progressbar" style="width:0%">0%</div>\n\
            </div>',
            progressCompleted: function () {
              
            },
            onShow: function ($this) {
                var xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = evt.loaded / evt.total;
                            percentComplete = parseInt(percentComplete * 100);
                            $('.myprogress').text(percentComplete + '%');
                            $('.myprogress').css('width', percentComplete + '%');
                            var i = 0;
                        }
                    }, false);
                    return xhr;
            },
            closed: function () {
                //
            }
        });
         event.preventDefault();
         var data = new FormData();
         var files = $("#"+MediaId).get(0).files;

         data.append("_token", getMetaContentByName('csrf-token'));
        if (files.length > 0) { data.append("files", files[0]); }
            else {
                $(function () {
                        (function () {
                            Lobibox.notify('info', {
                                rounded: false,
                                position: "top right",
                                delay: 5000,
                                delayIndicator: true,
                                msg: "Please select file to upload."
                            });
                        })();
                    });
                return false;
            }
            var extension = $("#"+MediaId).val().split('.').pop().toUpperCase();
            //alert(extension)
            if (extension != "PNG" && extension != "JPG" && extension != "GIF" && extension != "JPEG" && extension != "DOCX" && extension != "DOC" && extension != "PDF") {
                 $(function () {
                        (function () {
                            Lobibox.notify('error', {
                                rounded: false,
                                position: "top right",
                                delay: 5000,
                                delayIndicator: true,
                                msg: "Invalid file format."
                            });
                        })();
                    });
                  $("#"+MediaId).val('');
                  $(".btn-close").click();
                return false;
            }
        $.ajax({
            type: "post",
            enctype: 'multipart/form-data',
            url: ___url_,
            data: data,
            processData: false,
            contentType: false,
            cache: false,
            timeout: 600000,
            beforeSend: function (){
                   
            },
            success: function (data) { 
              $(".btn-close").trigger("click");
                 $(".lobibox-close").click();
                if(data['status']){
                     Lobibox.notify('success', {
                            position: "top right",
                            msg: 'File has been uploded successfully'
                        });
                     //console.log(MediaId);
                    $("#f_"+MediaId).val(data['filename']);
                    if(data['fileType']){
                       $("#fT_"+MediaId).val(data['fileType']);
                    }
                }else{
                   $("#"+MediaId).val('');
                    Lobibox.notify('error', {
                            position: "top right",
                            msg: data['message']
                        });
                }
              
            },
            error: function (e) {
               $(".btn-close").trigger("click");
                 jQuery('#logo-duplicate_'+MediaId).val('');
                 var Arry = e.responseText;
                 var error = "";
                 JSON.parse(Arry, (k, v)=>{
                       if(typeof v != 'object'){
                       error +=v+"<br>"
                       }
                     })
                 $("#"+MediaId).val('');
                 $("#f_"+MediaId).val('');
                 $("#fT_"+MediaId).val('');
                  Lobibox.notify('error', {
                         rounded: false,
                         position: "top right",
                         delay: 5000,
                         delayIndicator: true,
                         msg: error
                     });
               
            }
        });
    });
    
    $.fn.inputFilter = function(inputFilter) {
        return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function() {
            if (inputFilter(this.value)) {
                this.oldValue = this.value;
                this.oldSelectionStart = this.selectionStart;
                this.oldSelectionEnd = this.selectionEnd;
            } else if (this.hasOwnProperty("oldValue")) {
                this.value = this.oldValue;
                this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
            } else {
                this.value = "";
            }
        });
    };

    $(".number_only").inputFilter(function(value) {
        return /^\d*$/.test(value);// Allow digits only, using a RegExp
    });
});

 /*-----------------------------------------------*/
 /* --------- Use For Only Image Upload -----*/
jQuery(document).ready(function () { 
    $(".onlyimageupload").change(function (event) { 
      var MediaId = this.id;
      var inter;
        Lobibox.progress({
            title: 'Please wait',
            label: 'Uploading files...',
            progressTpl: '<div class="progress " >\n\
            <div class="progress-bar progress-bar-danger progress-bar-striped lobibox-progress-element myprogress" role="progressbar" style="width:0%">0%</div>\n\
            </div>',
            progressCompleted: function () {
               
            },
            onShow: function ($this) {
                var xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = evt.loaded / evt.total;
                            percentComplete = parseInt(percentComplete * 100);
                            $('.myprogress').text(percentComplete + '%');
                            $('.myprogress').css('width', percentComplete + '%');
                            var i = 0;
                        }
                    }, false);
                    return xhr;
            },
            closed: function () { 
                // 
            }
        });
         event.preventDefault();
         var data = new FormData();
         var files = $("#"+MediaId).get(0).files;
         data.append("_token", getMetaContentByName('csrf-token'));
         if(MediaId == 'PImage'){
           data.append("user_id",  $(this).data('userid'));
         }
        if (files.length > 0) { data.append("files", files[0]); }
            else {
                $(function () {
                        (function () {
                            $(".btn-close").trigger("click");
                            $(".lobibox-close").click();
                            Lobibox.notify('info', {
                                rounded: false,
                                delay: 5000,
                                delayIndicator: true,
                                msg: "Please select file to upload."
                            });
                        })();
                    });
                return false;
            }
            var extension = $("#"+MediaId).val().split('.').pop().toUpperCase();
            if (extension != "PNG" && extension != "JPG" && extension != "GIF" && extension != "JPEG") {
                 $(function () {
                        (function () {
                            $(".btn-close").trigger("click");
                            $(".lobibox-close").click();
                            Lobibox.notify('error', {
                                rounded: false,
                                delay: 5000,
                                delayIndicator: true,
                                msg: "Invalid image file format."
                            });
                        })();
                    });
                  $("#"+MediaId).val('');
                return false;
            }
        $.ajax({
            type: "post",
            enctype: 'multipart/form-data',
            url: _imageUpload,
            data: data,
            processData: false,
            contentType: false,
            cache: false,
            timeout: 600000,
             xhr: function () {
                        var xhr = new window.XMLHttpRequest();
                        xhr.upload.addEventListener("progress", function (evt) {
                            if (evt.lengthComputable) {
                                var percentComplete = evt.loaded / evt.total;
                                percentComplete = parseInt(percentComplete * 100);
                                $('.myprogress').text(percentComplete + '%');
                                $('.myprogress').css('width', percentComplete + '%');
                            }
                        }, false);
                        return xhr;
                    },
                 beforeSend: function (){
                        
                },
            success: function (data) {
                $(".btn-close").trigger("click");
                $(".lobibox-close").click();
                if(data['status']){
                      $(".close-btn-pop").trigger("click");
                     if(MediaId == 'PImage'){
                       $('#head_dp').attr('src',_UserImgSrc+data['filename']);
                       $('#header_PImage').attr('src',_UserImgSrc+data['filename']);
                        Lobibox.notify('success', {
                            msg: 'Profile picture has been changed successfully',
                            position: "top right"
                        });
                     }else{
                        Lobibox.notify('success', {
                            msg: 'File has been uploaded successfully',
                            position: "top right"
                        });
                     }
                      $('#dash_'+MediaId).attr('src',_UserImgSrc+data['filename']);
                      $("#f_"+MediaId).val(data['filename']);
                }else{
                        Lobibox.notify('error', {
                            msg: data['message'],
                            position: "top right"
                        });
                }
            },
            error: function (e) {
                $(".btn-close").trigger("click");
                $(".lobibox-close").click();
                 jQuery('#logo-duplicate_'+MediaId).val('');
                 var Arry = e.responseText;
                 var error = "";
                 JSON.parse(Arry, (k, v)=>{
                       if(typeof v != 'object'){
                       error +=v+"<br>"
                       }
                     })
                  Lobibox.notify('error', {
                         rounded: false,
                         position: "top right",
                         delay: 5000,
                         delayIndicator: true,
                         msg: error
                     });
            }
        });
    });
});


window.onload = function () {
  setTimeout(function(){
    //document.getElementsByTagName('table')[0].style.setProperty("width", "100%", "important");
   }, 3000);

 };

var OnRoleChangeFormChange = function() {
    "use strict";
    return {
        init: function() {
             $("#select_role").change(function(){
                $(this).find("option:selected").each(function(){
                    var optionValue = $(this).attr("value");
                    if(optionValue){
                        if(optionValue == 'instructor'){
                            $('.req_instructor').prop('required',true);
                            $(".form_" + optionValue).show();
                        }else{
                          $('.req_instructor').prop('required',false);
                          $(".form_instructor").hide();
                        }
                    } else{
                        $('.req_instructor').prop('required',false);
                        $(".form_instructor").hide();
                    }
                });
            }).change();
         }
    }
}();

var DirectFormSubmitWithAjax = function() {
    "use strict";
    return {
        init: function() {
            $('.directSubmit').click(function() { 
              var submitFormId = 'F_' + this.id;
              var action = $("#" + submitFormId).attr("action");
             
              $("#" + submitFormId).validate({
                  rules: {
                      password: {
                          required: function() {
                              if ($("#old_password").val() == '')
                                  return false;
                              else
                                  return true;
                          },
                          minlength: 6,
                      },
                      password_confirmation: {
                          equalTo: "#npass"
                      }
                  },
                  messages: {
                      password: {
                          minlength: 'Minimum length 6 charecters for password.'
                      },
                      password_confirmation: {
                          equalTo: 'Confirm password not matched.'
                      }
                  },
                  errorPlacement: function(e, r) {
                    //error.insertAfter('.err_' + element.attr("name"));
                    if(r.attr("type") == 'text'){
                     "radio" == r.attr("type") || "checkbox" == r.attr("type") ? e.insertAfter($(r).closest(".form-group").children("div").children().last()) : "card_expiry_mm" == r.attr("name") || "card_expiry_yyyy" == r.attr("name") ? e.appendTo($(r).closest(".form-group").children("div")) : e.insertAfter(r)
                     }else{
                       e.appendTo(r.closest('.ermsg')); 
                     }
                  },
                  submitHandler: function(form) {
                      $(".directSubmit").prop("disabled", true);
                      $(".reset_loader").show();
                      $(form).ajaxSubmit({
                          url: action,
                          type: "POST",
                          beforeSend: function() {
                              $("#preloader").fadeIn();
                          },
                          success: function(data) { 
                              $('.directSubmit').prop("disabled", false);
                              $("#preloader").fadeOut();
                              Lobibox.notify(data['type'], {
                                    position: "top right",
                                    msg: data['message']
                                });
                              if (data['status_code'] == 200) {
                                  if (data['reset']) {
                                    //use for client credit
                                    if(data['CCR']){
                                        $('#credit_modal').modal('hide');
                                        $('#update_credit_modal').modal('hide');
                                        $('.totalCr').html(data['totalCr']);
                                        $("#ajaXcreditList").html('');
                                        $("#ajaXcreditList").html(JSON.parse(data['body']));
                                    }
                                      document.getElementById(submitFormId).reset();
                                  }
                                  if (data['dpchange'] == 'PImage') {
                                      $('#dash_'+data['dpchange']).attr('src',_UserImgSrc+data['filename']);
                                      $('#header_PImage').attr('src',_UserImgSrc+data['filename']);
                                      $(".close-btn-pop").trigger("click");
                                  }

                                  if(data['url']){
                                    location.href = data['url'];
                                  }
                              }
                          },
                          error: function(e) {
                              $(".reset_loader").hide();
                              $("#preloader").fadeOut();
                              $('.directSubmit').prop("disabled", false);
                              var Arry = e.responseText;
                              var error = "";
                              JSON.parse(Arry, (k, v) => {
                                  if (typeof v != 'object') {
                                      error += v + "<br>"
                                  }
                              })
                             Lobibox.notify('error', {
                                  rounded: false,
                                  delay: 5000,
                                  delayIndicator: true,
                                  position: "top right",
                                  msg: error
                              });
                          }
                      });
                  },
              });
            });
         }
    }
}();